Unix functions and substitutions
--------------------------------------------


String functions

substring

Task:
Create a shell program (using nano) and 
1) variable with value
2) substitute them in a string
3) function
4) call the function
5) function with placeholders and call them with actual values
--------------------------------------------------------------------------------------


  GNU nano 5.9                                            one.sh
function display()
{
        echo "This is display function. First Name is $1 and Last Name is $2"
}

date=`date`
echo "Hello $date"Hello Mon Oct 10 12:05:37 IST 2022


name='Raja';
echo "Hi $name"

display Siva Kumar


-------------------------Unix and Shell Programming------------------------------------
-----------------------------------------------------------------------------------------------------


Task:
create a hello world program in C language
use vi editor

save the file and exit		:wq

compile the file
	gcc one.c

run the file
	./a.exe


Identify the c language data types

short
int
long

char

float
double



Type	Storage size	Value range
char	1 byte	-128 to 127 or 0 to 255
unsigned char	1 byte	0 to 255
signed char	1 byte	-128 to 127
int	2 or 4 bytes	-32,768 to 32,767 or -2,147,483,648 to 2,147,483,647
unsigned int	2 or 4 bytes	0 to 65,535 or 0 to 4,294,967,295
short	2 bytes	-32,768 to 32,767
unsigned short	2 bytes	0 to 65,535
long	8 bytes or (4bytes for 32 bit OS)	-9223372036854775808 to 9223372036854775807
unsigned long	8 bytes	0 to 18446744073709551615

long double


Programming control statements:

if
if else
if else if else
switch
while
do while
for



Accept a string input and check if it is a palindrome or not.
hint:
	strlen
	
==

char x[10];
char y[10];

x==y



#define
const
arrays
multi dimension arrays

a[0]=	a+0


a[3]	=	a+3


Create a function that accepts 2 arguments
	those 2 arguments x , y	defined in the function are called as Formal parameters

	while calling the function, if you pass	a,b	then they are called as actual parameters

create a function 	"swap" that accepts 2 parameters and swap them.

Pointers:
	to declare a pointer, we use * symbol

	int *a;

	to get the value of the pointer
		*a

address of operator		&

	&x;			address of x


scanf	
	should be able to modify/update the value of a variable.
	that is why we use & in scanf

scanf("%d",&marks);



#define
	

/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<string.h>

void swap(int *x, int *y)
{
    int temp=*x;
    *x=*y;
    *y=temp;
}

int main()
{
    int a=20;
    int b=30;
    swap(&a,&b);
    printf("a=%d\tb=%d",a,b);
    return 0;
}


-------------------------
/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<string.h>

#define age 10
#define NEWLINE '\n'

int main()
{
    
    int x=age;
    printf("%d",age);
    printf("%c",NEWLINE);
    printf("%d",age);
    return 0;
}




10
8
6
12
1
3
5
2
6
5
18



/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<string.h>

int main()
{
    int n;
    scanf("%d",&n);
    int arr[n];
    
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    
    //start the algorithm
    int max=0;
    int runLength=0;
    int startIndex=-1;
    int maxStartIndex=-1;
    
    printf("------------------------\n");
    for(int i=0;i<n;i++)
    {
        //check if current element is even or not
        if(arr[i]%2==0)
        {
            //even
            // printf("%d\n",arr[i]);
            runLength++;
            if(runLength==1)
            {
                startIndex=i;
                // printf("StartIndex=%d\n",startIndex);
            }
            if(runLength>max)
            {
                max=runLength;
                maxStartIndex=startIndex;
                // printf("Max gets updated now:%d\n",max);
            }
        }else
        {
            runLength=0;
        }
    
    }    
    printf("%d\t%d",max,maxStartIndex);
    
    
    return 0;
}
=================================
Ascending order sequence
You have found trees grown on a line , but they are not in order . You plan to find the portion of trees with heights in ascending order.
Given a integer array  that represents the heights of trees , write a program to find the maximum length of ascending order sequence.

Input Format :
A single integer that denotes the size of the array
Space separated integer array values that corresponds to the array values.

Output Format :
A single integer that denotes the maximum length

Sample Input 1
14
0 1 3 5 7 0 1 2 3 4 5 6 7 0

Sample Output 1
8

Sample Input 2
5
2 -2 2 -2 2

Sample Output 2
2 
 





5
5 4 3 2 1

6
1 2 0 1 2 3



/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include<string.h>

int main()
{
    int n;
    scanf("%d",&n);
    int arr[n];
    
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    
    //algorithm
    int ascCount=0;
    int maxAscCount=0;
    
    for(int i=0;i<n-1;i++)
    {
        // printf("%d",arr[i]);
        if(arr[i]<arr[i+1])
        {
            ascCount++;
            if(ascCount==1)
                ascCount=2;
            if(ascCount>maxAscCount)
                maxAscCount=ascCount;
        }else
        {
            ascCount=0;
        }
    }
    

    printf("answer is %d",maxAscCount);
    return 0;
}

--------------------------------------
Task:
Accept a number as input (input should be less than 10)

Display the factorial of that number.

Ex:

5 factorial = 5 * 4 * 3 * 2 * 1	=	120


