Maven
	is a project build tool
	creates a project folder structure
	pom.xml
		Project Object Model
		xml file that contains all information about a project 
			.jar	/ .war
			dependencies	(jar files)


mvc
	struts f/w		was MVC fw


model
	data definition
	data access
		EJB
		Hibernate

controller
	Dispatcher Servlet

	in spring mvc, controller is a POJO class

	

Spring MVC	
	xml configuration
	annotations
Spring boot MVC



web.xml
	deployment descriptor file


1) create a dynamic web project with web.xml
2) convert it to maven project
	right click project -> configure -> convert to maven project
3) in pom.xml we added the following dependencies:
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.9.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.3.9.RELEASE</version>
		</dependency>
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

4) configure the dispatcher servlet in web.xml
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	id="WebApp_ID" version="4.0">
	<display-name>03-oct-mvc-2</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>


5) create the spring-servlet.xml
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<context:component-scan
		base-package="com.empower.hrms" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
</beans>

6) create views folder under WEB-INF
	and put all the jsp files there

7) now create the controller class	(this class must be present under the base package (sub package is allowed)

package com.empower.hrms.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class MyController {
	
	@RequestMapping("/")
	public String home()
	{
		return "index";			//prefix + index + suffix
	}
	
	@RequestMapping("/about")
	public String aboutUs()
	{
		return "about-us";
	}
}


Task:

mvn archetype:generate -DgroupId=org.website.codekru -DartifactId=DemoProject -DpackageName=org.website.codekru -Dversion=1.0-SNAPSHOT -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false



Spring boot
----------------

1) Spring initializr
	creates and provide you the project 

2) Convention over configuration

3) in built apache tomcat server
	
4) starter dependencies


-----------------------------------------------------------
Spring boot
	JpaRepository

CustomerDao	

CustomerRepository
	interface

implementation
	CustomerService

==================================
We will start HTML now, (once maven issue is resolved, we will come back to spring)

HTML
	stands for
		HyperText Markup Language
SGML
	

browsers understand html
html is meant for presentation	/ display	in browser

structure of html

root element of html file is
	
	<HTML>
		<HEAD>
			these data are processed even before the body is displayed in the browser
		</HEAD>
		<BODY>
			displayed in browser
		</BODY>
	</HTML>

tag types:
	Processing instruction		<!DOCTYPE html>			means html5
	EMPTY TAG			<br/>	<hr/>	<input type="text" />	
	BODY TAG/ CONTENT TAG		<p> this is a paragraph </p>
	ENTITIES				&nbsp;
	ATTRIBUTES		<p align="center" > this is a para</p>		here, align is attribute
	COMMENTS		<!-- this is a comment -->


<element attribute="value">


in a website, you want to display
	a>b


<p> a &lt; b</p>


&gt;		>
&lt;		>
&eq;		=
&ne;		!=

============================Maven issue is now resolved===============
