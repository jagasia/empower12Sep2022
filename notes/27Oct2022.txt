Pro *C
	is oracle library for C language to access database using SQL statements

precomp

proc file1.pc
gcc file1.c
./a.out		a.exe


http://programmingexamples.wikidot.com/pro-c-tutorial
https://www.javatpoint.com/proc#Program
	
----------------------------------------------

ReactJs Routing
---------------------

install routing module to the project

CSS styling:
-----------------------

How to use CSS in a react project?

1) inline
2) internal
3) external

in react,
	camelCase

css:	background-color:blue

in react:	{ backgroundColor:blue }

-----------------
1) run the below batch file to start sonarqube
D:\Softwares\sonarqube-8.8.0.42792\bin\windows-x86-64
	StartSonar.bat

after running this batch file, sonar will run in 9000 port

http://localhost:9000

	login using 	admin/admin



---------------------------------
Docker network demo:
1) mysql database
2) spring rest api (we create)

there will be 2 docker images running in same network

we have created a spring boot rest api for candidate

1) create a docker network
	docker network create user-mysql

2) check if it is created
	docker network ls

3) run the mysql image using the options
	--name
	--network
	-e root password

docker container run --name mysqldb --network user-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=empower -d mysql:8



4) connect to mysql bash
	docker container exec -it mysqldb bash

5) login to mysql
	mysql -uroot -proot

6) in application.properties
spring.datasource.url=jdbc:mysql://mysqldb/empower
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect


7) create the docker image of this rest api in user-mysql network

	docker image build -t candidate .

8) run this image in the user-mysql network 
	docker container run --network user-mysql --name candidate-container -p 5000:5000 -d candidate

9) docker ps
	show all the containers

10) use postman to add some candidates
11) check mysql bash terminal to see the records added (table names are case sensitive)



-------------------------------------
Another method to run rest api and mysql together using docker-compose

https://medium.com/@kewynakshlley/docker-compose-with-mysql-and-spring-boot-596471664494

byte[] picture;			//blob in oracle


getPicture()


getPicture1()
	return Base64String



Angular pending:
-----------------------
@Input
@Output
ng-content

